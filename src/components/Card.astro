---
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';

const { href, img } = Astro.props;

interface GHData {
    name: string;
    description: string;
    stargazers_count: number;
    forks_count: number;
    subscribers_count: number;
}

async function getGHData(repoUrl: string): Promise<GHData> {
    const api: string = `${repoUrl.replace('github.com', 'api.github.com/repos')}`;
    const resp: Response = await fetch(api);
    return await resp.json();;
}

const data = await getGHData(href);
---

<div id="card">
    { data.name ? (
        <a href={href}><Image id="card__img" src={img} alt={data.name} inferSize/></a>
        <section id="card__stats">
            <h1>{data.name}</h1>
            <p>{data.description}</p>
            <span><Icon name="octicon:eye-24" id="watchers"/> {data.subscribers_count}</span>
            <span><Icon name="octicon:repo-forked-24" id="forks"/> {data.forks_count}</span>
            <span><Icon name="octicon:star-24" id="stars"/> {data.stargazers_count}</span>
        </section>
    ) : (
        <p>Error: Failed fetching repository</p>
    )}
</div>

<style lang="scss">
    #card {
        min-width: 200px;
        max-width: 400px;
        margin: 2% 2%;
        padding: 2% 2% 0 2%;
        border-radius: 15px;
        background-color: var(--surface1);
        color: white;
        box-shadow: 8px 8px 8px #00000096;
        &__img {
            max-width: 100%;
            height: auto;
            border-radius: 10px;
            transition: transform 0.5s ease-in-out;
            &:hover {
                transform: scale(0.9);
            }
        }
        &__stats {
            padding: 0 0 2% 2%;
            span {
                padding: 0 2% 2% 0;
            }
            #gh-fork {
                width: 25px;
                height: auto;
            }
        }
    }
</style>